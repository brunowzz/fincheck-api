generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid()) @db.Uuid()
  name        String
  email       String        @unique
  password    String
  BankAccount BankAccount[]
  Category    Category[]
  Transaction Transaction[]
}

enum EnumType {
  CHECKING
  INVESTMENT
  CASH
}

model BankAccount {
  id          String        @id @default(uuid()) @db.Uuid()
  name        String
  type        EnumType
  balance     Decimal       @db.Decimal
  userId      String        @db.Uuid()
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  color       String
  Transaction Transaction[]
}

model Category {
  id          String        @id @default(uuid()) @db.Uuid()
  userId      String        @db.Uuid()
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String
  icon        String
  Transaction Transaction[]
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id          String          @id @default(uuid()) @db.Uuid()
  userId      String          @db.Uuid()
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  accountId   String          @db.Uuid()
  account     BankAccount     @relation(fields: [accountId], references: [id], onDelete: Cascade)
  categoryId  String?         @db.Uuid()
  category    Category?       @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  amount      Decimal         @db.Decimal
  date        DateTime
  description String?
  type        TransactionType
}
